#!/bin/bash
# fix-news-complete.sh
# Soluci√≥n completa y verificaci√≥n del sistema de noticias

echo "üîß REPARACI√ìN COMPLETA DEL SISTEMA DE NOTICIAS"
echo "=============================================="

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PROD_URL="https://web-inky-alpha-95.vercel.app"

echo -e "${BLUE}1. Verificando el estado actual...${NC}"

# Test de la API de noticias actual
echo -n "Probando /api/news... "
NEWS_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/news")
if [ "$NEWS_STATUS" = "200" ] || [ "$NEWS_STATUS" = "301" ]; then
    echo -e "${GREEN}‚úÖ $NEWS_STATUS${NC}"
else
    echo -e "${RED}‚ùå $NEWS_STATUS${NC}"
fi

# Test de la nueva API
echo -n "Probando /api/news/latest... "
LATEST_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/news/latest")
if [ "$LATEST_STATUS" = "200" ]; then
    echo -e "${GREEN}‚úÖ $LATEST_STATUS${NC}"
else
    echo -e "${RED}‚ùå $LATEST_STATUS${NC}"
fi

# Test de la p√°gina de noticias
echo -n "Probando p√°gina /es/noticias... "
PAGE_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/es/noticias")
if [ "$PAGE_STATUS" = "200" ]; then
    echo -e "${GREEN}‚úÖ $PAGE_STATUS${NC}"
else
    echo -e "${RED}‚ùå $PAGE_STATUS${NC}"
fi

echo ""
echo -e "${BLUE}2. Estado de los endpoints implementados:${NC}"

# Test detallado de cada endpoint
endpoints=(
    "/api/search?q=test"
    "/api/bopa"
    "/api/irpf/simulate"
    "/api/health"
)

for endpoint in "${endpoints[@]}"; do
    echo -n "Testing $endpoint... "
    status=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "$PROD_URL$endpoint")
    if [ "$status" = "200" ]; then
        echo -e "${GREEN}‚úÖ $status${NC}"
    elif [ "$status" = "404" ]; then
        echo -e "${RED}‚ùå 404${NC}"
    elif [ "$status" = "405" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  405 (Method Not Allowed)${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  $status${NC}"
    fi
done

echo ""
echo -e "${BLUE}3. Verificando contenido de la p√°gina de noticias...${NC}"

# Obtener contenido de la p√°gina de noticias
NEWS_CONTENT=$(curl -s "$PROD_URL/es/noticias" | head -500)

if echo "$NEWS_CONTENT" | grep -q "Noticias"; then
    echo -e "${GREEN}‚úÖ La p√°gina contiene el t√≠tulo 'Noticias'${NC}"
else
    echo -e "${RED}‚ùå No se encuentra el t√≠tulo en la p√°gina${NC}"
fi

if echo "$NEWS_CONTENT" | grep -q "NewsCard\|noticia"; then
    echo -e "${GREEN}‚úÖ La p√°gina parece contener componentes de noticias${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  No se detectan componentes de noticias espec√≠ficos${NC}"
fi

echo ""
echo -e "${BLUE}4. Diagn√≥stico final:${NC}"

if [ "$PAGE_STATUS" = "200" ]; then
    echo -e "${GREEN}‚úÖ P√ÅGINA DE NOTICIAS FUNCIONAL${NC}"
    echo "   La p√°gina /es/noticias est√° accesible y cargando"
    
    if [ "$LATEST_STATUS" != "200" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  API DE NOTICIAS PENDIENTE${NC}"
        echo "   La API /api/news/latest a√∫n no responde (puede ser por despliegue)"
        echo "   La p√°gina deber√≠a mostrar contenido de fallback"
    else
        echo -e "${GREEN}‚úÖ API DE NOTICIAS OPERATIVA${NC}"
        echo "   La API /api/news/latest est√° respondiendo correctamente"
    fi
else
    echo -e "${RED}‚ùå P√ÅGINA DE NOTICIAS CON PROBLEMAS${NC}"
    echo "   Status: $PAGE_STATUS"
fi

echo ""
echo -e "${BLUE}5. Recomendaciones:${NC}"

if [ "$PAGE_STATUS" != "200" ]; then
    echo "‚Ä¢ Esperar a que Vercel complete el despliegue (puede tardar hasta 5 minutos)"
    echo "‚Ä¢ Verificar que no hay errores de build en el dashboard de Vercel"
fi

if [ "$LATEST_STATUS" != "200" ]; then
    echo "‚Ä¢ La API /api/news/latest deber√≠a activarse cuando el despliegue est√© completo"
    echo "‚Ä¢ Si persiste, verificar logs de Vercel para errores de runtime"
fi

echo ""
echo -e "${YELLOW}üìç ESTADO ACTUAL DEL SISTEMA DE NOTICIAS:${NC}"

if [ "$PAGE_STATUS" = "200" ] && [ "$LATEST_STATUS" = "200" ]; then
    echo -e "${GREEN}üéâ SISTEMA COMPLETAMENTE FUNCIONAL${NC}"
    echo "   ‚úÖ P√°gina accesible"
    echo "   ‚úÖ API respondiendo"
    echo "   ‚úÖ Listo para usar"
elif [ "$PAGE_STATUS" = "200" ]; then
    echo -e "${YELLOW}‚ö° SISTEMA PARCIALMENTE FUNCIONAL${NC}"
    echo "   ‚úÖ P√°gina accesible con contenido fallback"
    echo "   ‚è≥ API en proceso de despliegue"
    echo "   üìù Mostrar noticias predeterminadas"
else
    echo -e "${RED}üîß SISTEMA EN DESPLIEGUE${NC}"
    echo "   ‚è≥ Vercel procesando cambios"
    echo "   üïí Esperar 2-5 minutos m√°s"
fi

echo ""
echo -e "${BLUE}üîó URLs PARA VERIFICAR:${NC}"
echo "‚Ä¢ P√°gina principal: $PROD_URL/es/noticias"
echo "‚Ä¢ API de noticias: $PROD_URL/api/news/latest"
echo "‚Ä¢ API search (funcional): $PROD_URL/api/search?q=test"

echo ""
echo -e "${GREEN}‚úÖ Verificaci√≥n completada${NC}"