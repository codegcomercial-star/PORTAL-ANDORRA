name: "Test Portal Andorra"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'
      
      - name: Install dependencies
        run: cd apps/web && npm ci --legacy-peer-deps
      
      - name: Run unit tests
        run: cd apps/web && npm run test -- --coverage --watchAll=false
      
      - name: Run lint
        run: cd apps/web && npm run lint
      
      - name: Build application
        run: cd apps/web && npm run build
      
      - name: Install Playwright browsers
        run: cd apps/web && npx playwright install --with-deps
      
      - name: Run Playwright tests
        run: cd apps/web && npx playwright test
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            apps/web/coverage/
            apps/web/test-results/
            apps/web/playwright-report/
          retention-days: 30

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'
      
      - name: Install dependencies
        run: cd apps/web && npm ci --legacy-peer-deps
      
      - name: Build application
        run: cd apps/web && npm run build
      
      - name: Run Lighthouse CI
        run: cd apps/web && npx lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN || 'mock-token' }}